h1. Model layer

As our application receive Incident report, we will create a java model class to support the information that we will receive and will additionally use it to persist info into the database using JPA specification.

The reportincident model is really simple because it only contains one class that we will use :
* to map information with the database, CSV file,
* to transport information to web screen.

STEP 1 : Move to to the directory/maven module {{persistence-jpa}}

STEP 2 : Create under {{src/main/java/org/fusesource/devoxx/reportincident/model}} directory the {{Abstract}} and {{Incident}} class and add the fields that will map info that we receive

Remark : The {{pom.xml}} file of each module contains all the dependencies required.

{snippet:url=src/main/snippets/Incident-properties.java}
{snippet}

STEP 2 : Generate the Getter and Setter fields
STEP 3 : Add camelâ€“bindy annotations
Bindy ([http://camel.apache.org/bindy.html]) is one of the data format supported by Camel like JAXB, SOAP, CSV, SMOOKS, Dozer, JSON, Castor, Xstreams, XmlBeans, Google Protobuf  ([http://camel.apache.org/data-format.html]). It will allow mapping the CSV record field with the java properties using Java @Annotations as we do with JAXB

Add the following annotations in the {{Incident}} class

{snippet:url=src/main/snippets/Incident-bindy.java}
{snippet}

h2. Extend model layer to support JPA

Our Incident model class will also be used as an Entity class to insert Report Incident in the database. We will use the JPA specification for that purpose and Apache OpenJPA ([http://openjpa.apache.org/builds/2.1.1/apache-openjpa/docs/manual.html]).

Our class/Entity will be mapped with the {{T_INCIDENT}} table, the definition of the different columns, their name and fields length are provided here after

STEP 1 : Add JPA annotations {{@Entity}}, {{@Table}}, {{@Column}}

{snippet:url=src/main/snippets/Incident-JPA.java}
{snippet}

As the Entity model is defined, we will now configure the persistence file that the JPA container will use

STEP 2 : Edit the persistence file in the directory {{src/main/resources/META-INF/persistence.xml}} and define the persistence unit name, the class to be persisted and the properties used by the JPA provider

{snippet:url=src/main/snippets/persistence.xml}
{snippet}
